@page "/recipes"
@using CookBook.Web.ApiClients
@inject NavigationManager NavManager
@inject ICookBookApiClient CookBookApiClient

@if (recipes == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <RadzenGrid AllowFiltering="true"
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                FilterMode="FilterMode.Advanced"
                AllowPaging="true"
                PageSize="5"
                AllowSorting="true"
                Data="@recipes"
                TItem="@RecipeListModel"
                ColumnWidth="200px"
                RowClick="RowClick"
                AllowColumnResize="true"
                LogicalFilterOperator="LogicalFilterOperator.Or">
        <Columns>
            <RadzenGridColumn TItem="RecipeListModel" Property="Id" Title="Ingredient ID" />
            <RadzenGridColumn TItem="RecipeListModel" Property="Name" Title="Name" />
            <RadzenGridColumn TItem="RecipeListModel" Property="ImageUrl" Sortable="false" Filterable="false">
                <Template Context="data">
                    <RadzenImage Path="@data?.ImageUrl" />
                </Template>
            </RadzenGridColumn>

            <RadzenGridColumn TItem="IngredientListModel" Property="ImageUrl" />

        </Columns>
    </RadzenGrid>
}


@code {
    private IEnumerable<RecipeListModel> recipes;

    protected override async Task OnInitializedAsync()
    {
        recipes = await CookBookApiClient.RecipeGetAllAsync();
    }

    private Task RowClick(RecipeListModel model)
    {
        NavManager.NavigateTo($"/recipe/{model.Id}");
        return Task.CompletedTask;
    }
}